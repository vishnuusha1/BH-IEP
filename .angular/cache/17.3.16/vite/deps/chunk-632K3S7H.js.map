{
  "version": 3,
  "sources": ["../../../../../node_modules/@progress/kendo-angular-l10n/fesm2022/progress-kendo-angular-l10n.mjs"],
  "sourcesContent": ["/**-----------------------------------------------------------------------------------------\n* Copyright © 2025 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Injectable, Directive, InjectionToken, Inject, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { skip, map, tap } from 'rxjs/operators';\n\n/**\n * A base class for a service that returns localized messages.\n *\n * For more information, refer to the section on [using the message service]({% slug messages_l10n %}#toc-using-the-message-service).\n */\nclass MessageService {\n  /**\n   * @hidden\n   */\n  constructor() {\n    /* noop */\n  }\n  /**\n   * @hidden\n   */\n  changes = new BehaviorSubject({\n    rtl: undefined\n  });\n  /**\n   * Notifies the components that the messages were changed.\n   *\n   * @param rtl - (Optional) A new value for the [text direction token]({% slug api_l10n_rtl %}).\n   */\n  notify(rtl) {\n    this.changes.next({\n      rtl\n    });\n  }\n  /**\n   * Returns a localized message for the supplied key.\n   *\n   * @param _key - The message key. For example, `\"kendo.grid.noRecords\"`.\n   * @return - The localized message for this key or `undefined` if not found.\n   */\n  get(_key) {\n    return undefined;\n  }\n  static ɵfac = function MessageService_Factory(t) {\n    return new (t || MessageService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MessageService,\n    factory: MessageService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MessageService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * Base class that acts as a component messages container.\n *\n * For internal use.\n * @hidden\n */\nclass ComponentMessages {\n  service;\n  subscription;\n  get override() {\n    return false;\n  }\n  ngOnChanges(changes) {\n    this.register(changes);\n    if (Object.keys(changes).some(field => !changes[field].isFirstChange())) {\n      this.service.notifyChanges();\n    }\n  }\n  ngOnInit() {\n    this.subscription = this.service.changes.pipe(skip(1)).subscribe(() => this.register(this));\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  register(changes) {\n    const keys = Object.keys(changes);\n    keys.forEach(key => this.service.register(key, this[key], this.override));\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  static ɵfac = function ComponentMessages_Factory(t) {\n    return new (t || ComponentMessages)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ComponentMessages,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ComponentMessages, [{\n    type: Directive,\n    args: [{}]\n  }], null, null);\n})();\n\n/**\n * A token that specifies the text direction of Kendo UI for Angular components.\n *\n * {% embed_file rtl/app.module.ts preview %}\n * {% embed_file rtl/app.component.ts %}\n * {% embed_file shared/main.ts hidden %}\n *\n */\nconst RTL = new InjectionToken(\"Kendo UI Right-to-Left token\");\n\n/**\n * Localization prefix for the component messages.\n *\n * For internal use.\n * @hidden\n */\nconst L10N_PREFIX = new InjectionToken('Localization key prefix');\n/**\n * Component localization service.\n *\n * For internal use.\n * @hidden\n */\nclass LocalizationService {\n  prefix;\n  messageService;\n  _rtl;\n  changes;\n  subscription;\n  dictionary = {};\n  constructor(prefix, messageService, _rtl) {\n    this.prefix = prefix;\n    this.messageService = messageService;\n    this._rtl = _rtl;\n    this.changes = new BehaviorSubject({\n      rtl: this._rtl\n    });\n    if (messageService) {\n      this.subscription = messageService.changes.pipe(map(({\n        rtl\n      }) => rtl !== undefined ? rtl : this._rtl), tap(rtl => this._rtl = rtl)).subscribe(rtl => {\n        this.dictionary = {};\n        this.changes.next({\n          rtl\n        });\n      });\n    }\n  }\n  get rtl() {\n    return this._rtl;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  get(shortKey) {\n    const key = this.key(shortKey);\n    return this.dictionary[key];\n  }\n  register(shortKey, value, override = false) {\n    const key = this.key(shortKey);\n    let message = value;\n    if (!override) {\n      if (Object.hasOwnProperty.call(this.dictionary, key)) {\n        return;\n      }\n      message = this.defaultValue(key, value);\n    }\n    this.dictionary[key] = message;\n  }\n  notifyChanges() {\n    this.changes.next({\n      rtl: this.rtl\n    });\n  }\n  key(shortKey) {\n    return this.prefix + '.' + shortKey;\n  }\n  defaultValue(key, value) {\n    if (!this.messageService) {\n      return value;\n    }\n    const alt = this.messageService.get(key);\n    return alt === undefined ? value : alt;\n  }\n  static ɵfac = function LocalizationService_Factory(t) {\n    return new (t || LocalizationService)(i0.ɵɵinject(L10N_PREFIX), i0.ɵɵinject(MessageService, 8), i0.ɵɵinject(RTL, 8));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: LocalizationService,\n    factory: LocalizationService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [L10N_PREFIX]\n      }]\n    }, {\n      type: MessageService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [RTL]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ComponentMessages, L10N_PREFIX, LocalizationService, MessageService, RTL };"],
  "mappings": "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",
  "names": []
}
